name: CI

on:
  push:
    branches:
      - main
    paths:
      - ".hadolint.yaml"
      - "Dockerfile.alpine"
      - "Dockerfile.ubuntu"
      - ".github/workflows/main.yml"

env:
  ALPINE_IMAGE_NAME: ghcr.io/${{ github.repository }}/toolbox:alpine
  UBUNTU_IMAGE_NAME: ghcr.io/${ github.repository }}/toolbox:ubuntu

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.1.6

      - name: Lint Alpine Dockerfile
        uses: hadolint/hadolint-action@v3.1.0
        with:
          dockerfile: Dockerfile.alpine

      - name: Lint Ubuntu Dockerfile
        uses: hadolint/hadolint-action@v3.1.0
        with:
          dockerfile: Dockerfile.ubuntu

  build-and-push:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.1.6

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3.0.0
        with:
          platforms: all

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Cache Docker layers
        uses: actions/cache@v4.0.2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3.1.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Alpine Docker image
        uses: docker/build-push-action@v5.3.0
        with:
          context: .
          dockerfile: Dockerfile.alpine
          push: true
          tags: ${{ env.ALPINE_IMAGE_NAME }}
          platforms: linux/amd64,linux/arm64

      - name: Build and push Ubuntu Docker image
        uses: docker/build-push-action@v5.3.0
        with:
          context: .
          dockerfile: Dockerfile.ubuntu
          push: true
          tags: ${{ env.UBUNTU_IMAGE_NAME }}
          platforms: linux/amd64,linux/arm64

  scan:
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.1.6

      - name: Scan Alpine Docker image with Trivy
        uses: aquasecurity/trivy-action@v0.21.0
        with:
          image-ref: ${{ env.ALPINE_IMAGE_NAME }}
          format: "sarif"
          output: "trivy-alpine.sarif"

      - name: Scan Ubuntu Docker image with Trivy
        uses: aquasecurity/trivy-action@v0.21.0
        with:
          image-ref: ${{ env.UBUNTU_IMAGE_NAME }}
          format: "sarif"
          output: "trivy-ubuntu.sarif"

      - name: Upload SARIF report for Alpine
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: trivy-alpine.sarif

      - name: Upload SARIF report for Ubuntu
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: trivy-ubuntu.sarif
